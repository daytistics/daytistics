name: CI/CD Pipeline

on:
  push:
    branches:
      - main
  pull_request:

jobs:
  pylint:
    name: Run PyLint
    runs-on: ubuntu-latest
    container:
      image: python:3.12-slim
    continue-on-error: true # Allow failure
    steps:
      - name: Checkout Code
        uses: actions/checkout@v4

      - name: Install Dependencies
        run: |
          pip install pylint

      - name: Run PyLint
        run: |
          pylint backend/**/*.py

  eslint:
    name: Run ESLint
    runs-on: ubuntu-latest
    container:
      image: oven/bun:latest
    continue-on-error: true # Allow failure
    steps:
      - name: Checkout Code
        uses: actions/checkout@v4

      - name: Install Dependencies
        run: |
          cd frontend
          bun add eslint

      - name: Run ESLint
        run: |
          cd frontend
          bunx eslint .

  pytest:
    name: Run PyTest
    runs-on: ubuntu-latest
    container:
      image: python:3.12-slim
    steps:
      - name: Checkout Code
        uses: actions/checkout@v4

      - name: Install Dependencies
        run: |
          pip install pytest

      - name: Run PyTest
        run: |
          pytest backend/tests

  vitest:
    name: Run Vitest
    runs-on: ubuntu-latest
    container:
      image: oven/bun:latest
    steps:
      - name: Checkout Code
        uses: actions/checkout@v4

      - name: Install Dependencies
        run: |
          cd frontend
          bun install vitest

      - name: Run Vitest
        run: |
          cd frontend
          bunx vitest run

  build_docs:
    name: Build and Deploy Documentation
    runs-on: ubuntu-latest
    container:
      image: python:3.10
    continue-on-error: true # Allow failure
    steps:
      - name: Checkout Code
        uses: actions/checkout@v4

      - name: Setup MkDocs
        run: |
          pip install mkdocs mkdocs-material

      - name: Build and Deploy
        uses: peaceiris/actions-gh-pages@v4
        with:
          github_token: ${{ secrets.GITHUB_TOKEN }}
          publish_dir: ./docs/site

  # notify_webhook:
  #   name: Notify Webhook
  #   runs-on: ubuntu-latest
  #   container:
  #     image: curlimages/curl:latest
  #   steps:
  #     - name: Call Webhook
  #       env:
  #         WEBHOOK_URL: $ {{ secrets.WEBHOOK_URL }}
  #       run: |
  #         curl -X POST -H "Content-Type: application/json" -d '{"status":"success"}' $WEBHOOK_URL
